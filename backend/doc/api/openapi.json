{
	"openapi": "3.0.2",
	"info": {
		"title": "ProxyChunk API",
		"version": "1.0"
	},
	"servers": [
		{
			"url": "http://localhost:4000/api"
		}
	],
	"paths": {
		"/proxies?page={page}": {
			"get": {
				"description": "Retrieve proxies stored in the database.",
				"summary": "Retrieve proxies stored in the database.",
				"operationId": "getProxies",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Desired page's index.",
						"required": false,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"default": 0
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Proxies",
									"type": "object",
									"properties": {
										"proxies": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"scheme": {
														"type": "string",
														"enum": ["http", "https", "socks4", "socks5"]
													},
													"address": {
														"type": "string"
													},
													"port": {
														"type": "integer"
													},
													"good": {
														"type": "boolean"
													},
													"speed": {
														"type": "number"
													},
													"createdAt": {
														"type": "string"
													},
													"updatedAt": {
														"type": "string"
													}
												}
											},
											"example": [
												{
													"scheme": "http",
													"address": "123.123.123.123",
													"port": 8080,
													"good": true,
													"speed": 1.32,
													"createdAt": "",
													"updatedAt": ""
												},
												{
													"scheme": "socks5",
													"address": "123.123.123.123",
													"port": 9050,
													"good": true,
													"speed": 3.14,
													"createdAt": "",
													"updatedAt": ""
												}
											]
										},
										"page": {
											"type": "integer",
											"example": 0
										},
										"totalPages": {
											"type": "integer",
											"example": 1
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Returned if the «page» parameter is out of bounds",
						"content": {
							"application/json": {
								"schema": {
									"title": "Proxies",
									"type": "object",
									"properties": {
										"page": {
											"type": "integer"
										},
										"totalPages": {
											"type": "integer"
										}
									}
								},
								"examples": {
									"Page parameter is OOB": {
										"value": {
											"page": 5,
											"totalPages": 1
										}
									},
									"No proxies in DB": {
										"value": {
											"page": 0,
											"totalPages": 0
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/proxies": {
			"post": {
				"description": "Submit proxies for a check.",
				"summary": "Submit proxies for a check.",
				"operationId": "postProxies",
				"parameters": [
					{
						"in": "body",
						"name": "proxies",
						"description": "Ranges of proxies.",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"schemes": {
									"type": "array",
									"description": "An array of schemes.",
									"minItems": 1,
									"maxItems": 4,
									"uniqueItems": true,
									"items": {
										"type": "string",
										"enum": ["http", "https", "socks4", "socks5"]
									}
								},
								"addresses": {
									"type": "array",
									"description": "Low and high boundary addresses, all the in-betweens and both boundaries will be checked.",
									"minItems": 2,
									"maxItems": 2,
									"example": ["123.123.123.123", "123.123.123.130"],
									"items": {
										"type": "string",
										"pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
									}
								},
								"ports": {
									"type": "array",
									"description": "Low and high boundary ports, all the in-betweens and both boundaries will be checked.",
									"minItems": 2,
									"maxItems": 2,
									"example": [8080, 8090],
									"items": {
										"type": "integer",
										"minimum": 0,
										"maximum": 65535
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"schemes": {
											"type": "array",
											"description": "An array of schemes.",
											"minItems": 1,
											"maxItems": 4,
											"uniqueItems": true,
											"items": {
												"type": "string",
												"enum": ["http", "https", "socks4", "socks5"]
											}
										},
										"addresses": {
											"type": "array",
											"description": "Low and high boundary addresses, all the in-betweens and both boundaries will be checked.",
											"minItems": 2,
											"maxItems": 2,
											"example": ["123.123.123.123", "123.123.123.130"],
											"items": {
												"type": "string",
												"pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
											}
										},
										"ports": {
											"type": "array",
											"description": "Low and high boundary ports, all the in-betweens and both boundaries will be checked.",
											"minItems": 2,
											"maxItems": 2,
											"example": [8080, 8090],
											"items": {
												"type": "integer",
												"minimum": 0,
												"maximum": 65535
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
